/* automatically generated by rust-bindgen 0.59.1 */

pub const LOSCFG_SYS_HEAP_SIZE: u32 = 65536;
pub const OS_MEM_SLI: u32 = 3;
pub const OS_MEM_SMALL_BUCKET_COUNT: u32 = 31;
pub const OS_MEM_SMALL_BUCKET_MAX_SIZE: u32 = 128;
pub const OS_MEM_LARGE_BUCKET_COUNT: u32 = 24;
pub const OS_MEM_LARGE_START_BUCKET: u32 = 7;
pub const OS_MEM_FREE_LIST_COUNT: u32 = 223;
pub const OS_MEM_BITMAP_WORDS: u32 = 7;

#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Default)]
pub struct OsMemNodeHead {
    #[cfg(LOSCFG_BASE_MEM_NODE_INTEGRITY_CHECK)]
    magic: u32,

    #[cfg(LOSCFG_MEM_LEAKCHECK)]
    linkReg: [usize; LOSCFG_MEM_RECORD_LR_CNT],

    ptr: Ptr,

    #[cfg(all(not(LOSCFG_TASK_MEM_USED), LOSCFG_MEM_FREE_BY_TASKID))]
    taskID: u32,

    #[cfg(all(not(LOSCFG_TASK_MEM_USED), LOSCFG_MEM_FREE_BY_TASKID))]
    sizeAndFlag: u32,

    #[cfg(all(LOSCFG_TASK_MEM_USED, not(LOSCFG_MEM_FREE_BY_TASKID)))]
    taskID: u32,

    #[cfg(all(LOSCFG_TASK_MEM_USED, not(LOSCFG_MEM_FREE_BY_TASKID)))]
    sizeAndFlag: u32,

    #[cfg(all(LOSCFG_TASK_MEM_USED, LOSCFG_MEM_FREE_BY_TASKID))]
    taskID: u32,

    #[cfg(all(LOSCFG_TASK_MEM_USED, LOSCFG_MEM_FREE_BY_TASKID))]
    sizeAndFlag: u32,

    #[cfg(not(any(LOSCFG_BASE_MEM_NODE_INTEGRITY_CHECK, LOSCFG_MEM_LEAKCHECK, LOSCFG_TASK_MEM_USED, LOSCFG_MEM_FREE_BY_TASKID)))]
    sizeAndFlag: u32,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub union Ptr {
    prev: *mut OsMemNodeHead,
    next: *mut OsMemNodeHead,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OsMemPoolInfo {
    pub pool: *mut VOID,
    pub totalSize: u32,
    pub attr: u32,
}

#[repr(C)]
#[derive(Copy, Clone)]
pub struct OsMemFreeNodeHead {
    pub header: OsMemNodeHead,
    pub prev: *mut OsMemFreeNodeHead,
    pub next: *mut OsMemFreeNodeHead,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OsMemPoolHead {
    pub info: OsMemPoolInfo,
    pub freeListBitmap: [u32; 7usize],
    pub freeList: [*mut OsMemFreeNodeHead; 223usize],
}

#[repr(C)]
#[derive(Copy, Clone)]
#[cfg(feature = "LOSCFG_MEM_WATERLINE")]
pub struct LosMemPoolStatus {
    totalUsedSize: u32,
    totalFreeSize: u32,
    maxFreeNodeSize: u32,
    usedNodeNum: u32,
    freeNodeNum: u32,
    usageWaterLine: u32,
}

#[repr(C)]
#[derive(Copy, Clone)]
#[cfg(not(feature = "LOSCFG_MEM_WATERLINE"))]
pub struct LosMemPoolStatus {
    totalUsedSize: u32,
    totalFreeSize: u32,
    maxFreeNodeSize: u32,
    usedNodeNum: u32,
    freeNodeNum: u32,
}
